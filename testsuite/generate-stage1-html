#!/bin/sh

cd ${0%/*}/..
TOPDIR=${PWD}
LOGDIR=${TOPDIR}/logs
TESTSUITE_DIR=${TOPDIR}/testsuite

builders=`cat ${LOGDIR}/stage1/results-stage1.txt | cut -f1 -d' ' | sort | uniq`
targets=`cat ${LOGDIR}/stage1/results-stage1.txt | cut -f2 -d' ' | sort | uniq`
output="${LOGDIR}/stage1/stage1-results.shtml"
body_only=1

# create target -> build symlinks
for t in ${targets}; do
  mkdir -p ${LOGDIR}/stage1/per-target/${t}
  for b in ${builders}; do
    [ ! -L ${LOGDIR}/stage1/per-target/${t}/${b} ] && ln -s ../../${b}/${t} ${LOGDIR}/stage1/per-target/${t}/${b}
  done
done

# generate redirect from per-target to results
echo '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
    <title>Deli redirect</title>
    <META HTTP-EQUIV="Refresh" CONTENT="0; URL=../">
  </head>
  <body>
  </body>
</html>
' > ${LOGDIR}/stage1/per-target/index.html

# generate page with stage1 results
> ${output}

if [ $body_only -eq 0 ]; then
echo '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>
      Fedora Bootstrap - Results
    </title>
    <style type="text/css">
      <!--
	table a {
	  text-decoration: none;
	  display: block;
	  text-align: center;
	  width: 100%;
	  color: black;
	}
	td.ok {
	  background-color: #30DF30;
	}
	td.missing {
	  background-color: #7070FF;
	}
	td.failed {
	  background-color: #FF4040;
	}
      -->
    </style>
  </head>
  <body>' >> ${output}
fi

echo '    <h3><u>STAGE1 Results</u></h3>
    <table>
      <tr>
	<th>B\T</th>' >> ${output}
for t in ${targets}; do
  echo "	<th><a href='per-target/${t}/'>&nbsp;${t}</a></th>" >> ${output}
done
echo "      </tr>" >> ${output}
for b in ${builders}; do
  echo "      <tr>" >> ${output}
  echo "	<th><a href='${b}/'>&nbsp;${b}</a></th>" >> ${output}
  for t in ${targets}; do
    result=`cat ${LOGDIR}/stage1/results-stage1.txt | grep "^${b} ${t} " | cut -f3 -d' '`
    cat ${LOGDIR}/stage1/results-stage1.txt | grep "^${b} ${t} " &> /dev/null
    missing=$?
    if [ ${missing} = 0 ]; then
      if [ "${result}" == "*OK*" ]; then
        echo "	<td class='ok'><a href='${b}/${t}/'>&nbsp;</a></td>" >> ${output}
      elif [ "${result}" == "*MISSING*" ]; then
        echo "	<td class='missing'></td>" >> ${output}
      else
        echo "	<td class='failed'><a href='${b}/${t}/${result}.log'>${result}</a></td>" >> ${output}
      fi
    else
      echo "	<td class='missing'></td>" >> ${output}
    fi
  done
  echo "      </tr>" >> ${output}
done
echo '    </table>
    <br>
    <u>Table legend:</u>
    <table>
      <tr>
	<td>B</td><td>&nbsp;&nbsp; BUILD (--build=)</td>
      </tr>
      <tr>
	<td>T</td><td>&nbsp;&nbsp; TARGET (--host=,--target=)</td>
      </tr>
      <tr>
	<td class="ok"></td><td>&nbsp;&nbsp; working combination of BUILD & TARGET</td>
      </tr>
      <tr>
	<td class="failed">failing recipe</td><td>&nbsp;&nbsp; failing combination of BUILD & TARGET</td>
      </tr>
      <tr>
	<td class="missing"></td><td>&nbsp;&nbsp; result missing</td>
      </tr>
    </table>' >> ${output}
if [ $body_only -eq 0 ]; then
echo '    <br>
  </body>
</html>' >> ${output}
fi
